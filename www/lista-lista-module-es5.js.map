{"version":3,"sources":["/./node_modules/@ngrx/entity/fesm5/entity.js","/./src/app/lista/components/compra-list/compra-list.component.html","/./src/app/lista/components/item-compra-detail/item-compra-detail.component.html","/./src/app/lista/containers/item-compra/item-compra.component.html","/./src/app/lista/containers/lista-compra/lista-compra.component.html","/./src/app/lista/components/compra-list/compra-list.component.scss","/./src/app/lista/components/compra-list/compra-list.component.ts","/./src/app/lista/components/item-compra-detail/item-compra-detail.component.scss","/./src/app/lista/components/item-compra-detail/item-compra-detail.component.ts","/./src/app/lista/containers/item-compra/item-compra.component.scss","/./src/app/lista/containers/item-compra/item-compra.component.ts","/./src/app/lista/containers/lista-compra/lista-compra.component.scss","/./src/app/lista/containers/lista-compra/lista-compra.component.ts","/./src/app/lista/lista-routing.module.ts","/./src/app/lista/lista.module.ts","/./src/app/lista/store/actions/item.actions.ts","/./src/app/lista/store/effects/items.effects.ts","/./src/app/lista/store/reducers/feature.reducer.ts","/./src/app/lista/store/reducers/item.reducer.ts","/./src/app/lista/store/selectors/item.selectors.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACqD;AACR;AACH;;AAE1C;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB;AAC/D;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,0CAA0C,kBAAkB;AAC5D,+CAA+C,uBAAuB;AACtE,wBAAwB,kEAAc;AACtC,0CAA0C,qBAAqB,EAAE;AACjE,SAAS;AACT,0BAA0B,kEAAc,4BAA4B,mBAAmB,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kEAAc;AACrC,4BAA4B,kEAAc;AAC1C,uBAAuB,kEAAc;AACrC,yBAAyB,kEAAc;AACvC;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA,iBAAiB,sDAAQ;AACzB,sBAAsB,sDAAQ,GAAG;AACjC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,mBAAmB,sDAAQ,GAAG,UAAU,uCAAuC;AAC/E;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,+DAAS;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sDAAQ,6CAA6C,oBAAoB;AAC3G;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,6CAA6C,EAAE;AAC9F;AACA,oCAAoC,8BAA8B,EAAE;AACpE,iCAAiC,mCAAmC,EAAE;AACtE;AACA,wDAAwD,6BAA6B,EAAE;AACvF;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,wBAAwB;AACxB,SAAS;AACT;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,oCAAoC,EAAE;AAC1F;AACA;AACA,iEAAiE,2CAA2C,EAAE;AAC9G;AACA,yDAAyD,0BAA0B,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sDAAQ,6CAA6C,oBAAoB;AAC3G;AACA;AACA;AACA,kCAAkC,0BAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,4DAA4D,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gDAAgD,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,qDAAqD,0CAA0C,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sDAAQ,6CAA6C,oBAAoB;AAC3G;AACA;AACA;AACA,kCAAkC,0BAA0B;AAC5D;AACA;AACA;AAC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","file":"lista-lista-module-es5.js","sourcesContent":["/**\n * @license NgRx 8.2.0\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\nimport { __spread, __assign, __values } from 'tslib';\nimport { createSelector } from '@ngrx/store';\nimport { isDevMode } from '@angular/core';\n\nfunction getInitialEntityState() {\n    return {\n        ids: [],\n        entities: {},\n    };\n}\nfunction createInitialStateFactory() {\n    function getInitialState(additionalState) {\n        if (additionalState === void 0) { additionalState = {}; }\n        return Object.assign(getInitialEntityState(), additionalState);\n    }\n    return { getInitialState: getInitialState };\n}\n\nfunction createSelectorsFactory() {\n    function getSelectors(selectState) {\n        var selectIds = function (state) { return state.ids; };\n        var selectEntities = function (state) { return state.entities; };\n        var selectAll = createSelector(selectIds, selectEntities, function (ids, entities) {\n            return ids.map(function (id) { return entities[id]; });\n        });\n        var selectTotal = createSelector(selectIds, function (ids) { return ids.length; });\n        if (!selectState) {\n            return {\n                selectIds: selectIds,\n                selectEntities: selectEntities,\n                selectAll: selectAll,\n                selectTotal: selectTotal,\n            };\n        }\n        return {\n            selectIds: createSelector(selectState, selectIds),\n            selectEntities: createSelector(selectState, selectEntities),\n            selectAll: createSelector(selectState, selectAll),\n            selectTotal: createSelector(selectState, selectTotal),\n        };\n    }\n    return { getSelectors: getSelectors };\n}\n\nvar DidMutate;\n(function (DidMutate) {\n    DidMutate[DidMutate[\"EntitiesOnly\"] = 0] = \"EntitiesOnly\";\n    DidMutate[DidMutate[\"Both\"] = 1] = \"Both\";\n    DidMutate[DidMutate[\"None\"] = 2] = \"None\";\n})(DidMutate || (DidMutate = {}));\nfunction createStateOperator(mutator) {\n    return function operation(arg, state) {\n        var clonedEntityState = {\n            ids: __spread(state.ids),\n            entities: __assign({}, state.entities),\n        };\n        var didMutate = mutator(arg, clonedEntityState);\n        if (didMutate === DidMutate.Both) {\n            return Object.assign({}, state, clonedEntityState);\n        }\n        if (didMutate === DidMutate.EntitiesOnly) {\n            return __assign({}, state, { entities: clonedEntityState.entities });\n        }\n        return state;\n    };\n}\n\nfunction selectIdValue(entity, selectId) {\n    var key = selectId(entity);\n    if (isDevMode() && key === undefined) {\n        console.warn('@ngrx/entity: The entity passed to the `selectId` implementation returned undefined.', 'You should probably provide your own `selectId` implementation.', 'The entity that was passed:', entity, 'The `selectId` implementation:', selectId.toString());\n    }\n    return key;\n}\n\nfunction createUnsortedStateAdapter(selectId) {\n    function addOneMutably(entity, state) {\n        var key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            return DidMutate.None;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    function addManyMutably(entities, state) {\n        var e_1, _a;\n        var didMutate = false;\n        try {\n            for (var entities_1 = __values(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {\n                var entity = entities_1_1.value;\n                didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (entities_1_1 && !entities_1_1.done && (_a = entities_1.return)) _a.call(entities_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    function addAllMutably(entities, state) {\n        state.ids = [];\n        state.entities = {};\n        addManyMutably(entities, state);\n        return DidMutate.Both;\n    }\n    function removeOneMutably(key, state) {\n        return removeManyMutably([key], state);\n    }\n    function removeManyMutably(keysOrPredicate, state) {\n        var keys = keysOrPredicate instanceof Array\n            ? keysOrPredicate\n            : state.ids.filter(function (key) { return keysOrPredicate(state.entities[key]); });\n        var didMutate = keys\n            .filter(function (key) { return key in state.entities; })\n            .map(function (key) { return delete state.entities[key]; }).length > 0;\n        if (didMutate) {\n            state.ids = state.ids.filter(function (id) { return id in state.entities; });\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    function removeAll(state) {\n        return Object.assign({}, state, {\n            ids: [],\n            entities: {},\n        });\n    }\n    function takeNewKey(keys, update, state) {\n        var original = state.entities[update.id];\n        var updated = Object.assign({}, original, update.changes);\n        var newKey = selectIdValue(updated, selectId);\n        var hasNewKey = newKey !== update.id;\n        if (hasNewKey) {\n            keys[update.id] = newKey;\n            delete state.entities[update.id];\n        }\n        state.entities[newKey] = updated;\n        return hasNewKey;\n    }\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    function updateManyMutably(updates, state) {\n        var newKeys = {};\n        updates = updates.filter(function (update) { return update.id in state.entities; });\n        var didMutateEntities = updates.length > 0;\n        if (didMutateEntities) {\n            var didMutateIds = updates.filter(function (update) { return takeNewKey(newKeys, update, state); }).length > 0;\n            if (didMutateIds) {\n                state.ids = state.ids.map(function (id) { return newKeys[id] || id; });\n                return DidMutate.Both;\n            }\n            else {\n                return DidMutate.EntitiesOnly;\n            }\n        }\n        return DidMutate.None;\n    }\n    function mapMutably(map, state) {\n        var changes = state.ids.reduce(function (changes, id) {\n            var change = map(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id: id, changes: change });\n            }\n            return changes;\n        }, []);\n        var updates = changes.filter(function (_a) {\n            var id = _a.id;\n            return id in state.entities;\n        });\n        return updateManyMutably(updates, state);\n    }\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    function upsertManyMutably(entities, state) {\n        var e_2, _a;\n        var added = [];\n        var updated = [];\n        try {\n            for (var entities_2 = __values(entities), entities_2_1 = entities_2.next(); !entities_2_1.done; entities_2_1 = entities_2.next()) {\n                var entity = entities_2_1.value;\n                var id = selectIdValue(entity, selectId);\n                if (id in state.entities) {\n                    updated.push({ id: id, changes: entity });\n                }\n                else {\n                    added.push(entity);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (entities_2_1 && !entities_2_1.done && (_a = entities_2.return)) _a.call(entities_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        var didMutateByUpdated = updateManyMutably(updated, state);\n        var didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    return {\n        removeAll: removeAll,\n        addOne: createStateOperator(addOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        addAll: createStateOperator(addAllMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        removeOne: createStateOperator(removeOneMutably),\n        removeMany: createStateOperator(removeManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\nfunction createSortedStateAdapter(selectId, sort) {\n    var _a = createUnsortedStateAdapter(selectId), removeOne = _a.removeOne, removeMany = _a.removeMany, removeAll = _a.removeAll;\n    function addOneMutably(entity, state) {\n        return addManyMutably([entity], state);\n    }\n    function addManyMutably(newModels, state) {\n        var models = newModels.filter(function (model) { return !(selectIdValue(model, selectId) in state.entities); });\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            merge(models, state);\n            return DidMutate.Both;\n        }\n    }\n    function addAllMutably(models, state) {\n        state.entities = {};\n        state.ids = [];\n        addManyMutably(models, state);\n        return DidMutate.Both;\n    }\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    function takeUpdatedModel(models, update, state) {\n        if (!(update.id in state.entities)) {\n            return false;\n        }\n        var original = state.entities[update.id];\n        var updated = Object.assign({}, original, update.changes);\n        var newKey = selectIdValue(updated, selectId);\n        delete state.entities[update.id];\n        models.push(updated);\n        return newKey !== update.id;\n    }\n    function updateManyMutably(updates, state) {\n        var models = [];\n        var didMutateIds = updates.filter(function (update) { return takeUpdatedModel(models, update, state); }).length >\n            0;\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            var originalIds_1 = state.ids;\n            var updatedIndexes_1 = [];\n            state.ids = state.ids.filter(function (id, index) {\n                if (id in state.entities) {\n                    return true;\n                }\n                else {\n                    updatedIndexes_1.push(index);\n                    return false;\n                }\n            });\n            merge(models, state);\n            if (!didMutateIds &&\n                updatedIndexes_1.every(function (i) { return state.ids[i] === originalIds_1[i]; })) {\n                return DidMutate.EntitiesOnly;\n            }\n            else {\n                return DidMutate.Both;\n            }\n        }\n    }\n    function mapMutably(updatesOrMap, state) {\n        var updates = state.ids.reduce(function (changes, id) {\n            var change = updatesOrMap(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id: id, changes: change });\n            }\n            return changes;\n        }, []);\n        return updateManyMutably(updates, state);\n    }\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    function upsertManyMutably(entities, state) {\n        var e_1, _a;\n        var added = [];\n        var updated = [];\n        try {\n            for (var entities_1 = __values(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {\n                var entity = entities_1_1.value;\n                var id = selectIdValue(entity, selectId);\n                if (id in state.entities) {\n                    updated.push({ id: id, changes: entity });\n                }\n                else {\n                    added.push(entity);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (entities_1_1 && !entities_1_1.done && (_a = entities_1.return)) _a.call(entities_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        var didMutateByUpdated = updateManyMutably(updated, state);\n        var didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    function merge(models, state) {\n        models.sort(sort);\n        var ids = [];\n        var i = 0;\n        var j = 0;\n        while (i < models.length && j < state.ids.length) {\n            var model = models[i];\n            var modelId = selectIdValue(model, selectId);\n            var entityId = state.ids[j];\n            var entity = state.entities[entityId];\n            if (sort(model, entity) <= 0) {\n                ids.push(modelId);\n                i++;\n            }\n            else {\n                ids.push(entityId);\n                j++;\n            }\n        }\n        if (i < models.length) {\n            state.ids = ids.concat(models.slice(i).map(selectId));\n        }\n        else {\n            state.ids = ids.concat(state.ids.slice(j));\n        }\n        models.forEach(function (model, i) {\n            state.entities[selectId(model)] = model;\n        });\n    }\n    return {\n        removeOne: removeOne,\n        removeMany: removeMany,\n        removeAll: removeAll,\n        addOne: createStateOperator(addOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        addAll: createStateOperator(addAllMutably),\n        addMany: createStateOperator(addManyMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\nfunction createEntityAdapter(options) {\n    if (options === void 0) { options = {}; }\n    var _a = __assign({ sortComparer: false, selectId: function (instance) { return instance.id; } }, options), selectId = _a.selectId, sortComparer = _a.sortComparer;\n    var stateFactory = createInitialStateFactory();\n    var selectorsFactory = createSelectorsFactory();\n    var stateAdapter = sortComparer\n        ? createSortedStateAdapter(selectId, sortComparer)\n        : createUnsortedStateAdapter(selectId);\n    return __assign({ selectId: selectId,\n        sortComparer: sortComparer }, stateFactory, selectorsFactory, stateAdapter);\n}\n\nvar Dictionary = /** @class */ (function () {\n    function Dictionary() {\n    }\n    return Dictionary;\n}());\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { createEntityAdapter, Dictionary };\n//# sourceMappingURL=entity.js.map\n","module.exports = \"<mat-list>\\r\\n  <mat-list-item *ngFor=\\\"let item of items\\\" routerLink=\\\"../item-compra\\\"\\r\\n                 (click)=\\\"select(item)\\\">{{item.nome}}</mat-list-item>\\r\\n</mat-list>\\r\\n\\r\\n<button mat-fab class=\\\"fab-bottom-right\\\" routerLink=\\\"../item-compra\\\">\\r\\n  <mat-icon>add</mat-icon>\\r\\n</button>\\r\\n\"","module.exports = \"<div class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\">\\r\\n<mat-card>\\r\\n  <form [formGroup]=\\\"itemForm\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        {{itemForm.value.nome}}\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Nome\\\" formControlName=\\\"nome\\\">\\r\\n        </mat-form-field>\\r\\n    </mat-card-content>\\r\\n    <mat-card-content>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Preço\\\" formControlName=\\\"preco\\\">\\r\\n        </mat-form-field>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-button [disabled]=\\\"itemForm.invalid\\\"  (click)=\\\"update()\\\" >Salvar</button>\\r\\n      <button mat-button *ngIf=\\\"itemForm.get('id').value\\\"  (click)=\\\"delete()\\\" >Remover</button>\\r\\n      <button mat-button routerLink=\\\"../lista-compra\\\" (click)=\\\"unselect()\\\">Voltar</button>\\r\\n    </mat-card-actions>\\r\\n  </form>\\r\\n</mat-card>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"<app-item-compra-detail [item]=\\\"item$ | async\\\" (actionEmitter)=\\\"dispatch($event)\\\"></app-item-compra-detail>\\r\\n\"","module.exports = \"<div class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\">\\r\\n  <mat-card>\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        Meus itens\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <app-compra-list [items]=\\\"items$ | async\\\" (actionEmitter)=\\\"dispatch($event)\\\" ></app-compra-list>\\r\\n    </mat-card-content>\\r\\n\\r\\n  </mat-card>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \".fab-bottom-right {\\n  position: fixed;\\n  bottom: 30px;\\n  right: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGlzdGEvY29tcG9uZW50cy9jb21wcmEtbGlzdC9DOlxcVXNlcnNcXGFsaXNvXFxlc3R1ZG9zXFx0cmFiYWxob3Bvcy9zcmNcXGFwcFxcbGlzdGFcXGNvbXBvbmVudHNcXGNvbXByYS1saXN0XFxjb21wcmEtbGlzdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbGlzdGEvY29tcG9uZW50cy9jb21wcmEtbGlzdC9jb21wcmEtbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvbGlzdGEvY29tcG9uZW50cy9jb21wcmEtbGlzdC9jb21wcmEtbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mYWItYm90dG9tLXJpZ2h0IHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgYm90dG9tOiAzMHB4O1xyXG4gIHJpZ2h0OiAxNXB4O1xyXG59XHJcbiIsIi5mYWItYm90dG9tLXJpZ2h0IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDMwcHg7XG4gIHJpZ2h0OiAxNXB4O1xufSJdfQ== */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Item} from '../../model/item';\r\nimport {selectItem} from '../../store/actions/item.actions';\r\n\r\n\r\n@Component({\r\n  selector: 'app-compra-list',\r\n  templateUrl: './compra-list.component.html',\r\n  styleUrls: ['./compra-list.component.scss']\r\n})\r\nexport class CompraListComponent implements OnInit {\r\n\r\n  @Input()\r\n  items: Item[];\r\n\r\n  @Output()\r\n  actionEmitter = new EventEmitter();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  select(item: Item) {\r\n    this.actionEmitter.emit(selectItem({item}));\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3RhL2NvbXBvbmVudHMvaXRlbS1jb21wcmEtZGV0YWlsL2l0ZW0tY29tcHJhLWRldGFpbC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Item} from '../../model/item';\r\nimport {createItem, deleteItem, unselectItem, updateItem} from '../../store/actions/item.actions';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {Action} from '@ngrx/store';\r\n\r\n\r\n@Component({\r\n  selector: 'app-item-compra-detail',\r\n  templateUrl: './item-compra-detail.component.html',\r\n  styleUrls: ['./item-compra-detail.component.scss']\r\n})\r\nexport class ItemCompraDetailComponent implements OnInit {\r\n\r\n\r\n  constructor(private fb: FormBuilder) {\r\n  }\r\n\r\n\r\n  itemForm = this.fb.group({\r\n    id: [''],\r\n    nome: [''],\r\n    preco: ['']\r\n  });\r\n\r\n  @Output()\r\n  actionEmitter = new EventEmitter<Action>();\r\n\r\n  @Input()\r\n  set item(item: Item) {\r\n    if (item) {\r\n      this.itemForm.patchValue(item);\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  unselect() {\r\n    this.actionEmitter.emit(unselectItem());\r\n  }\r\n\r\n  update() {\r\n    if (this.itemForm.get('id') && this.itemForm.get('id').value !== '') {\r\n      this.actionEmitter.emit(updateItem({item: this.itemForm.value}));\r\n    } else {\r\n      this.actionEmitter.emit(createItem({item: this.itemForm.value}));\r\n    }\r\n\r\n  }\r\n\r\n  delete() {\r\n    this.actionEmitter.emit(deleteItem({id: this.itemForm.get('id').value}));\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3RhL2NvbnRhaW5lcnMvaXRlbS1jb21wcmEvaXRlbS1jb21wcmEuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {Action, select, Store} from '@ngrx/store';\r\nimport {ItemState} from '../../store/reducers/item.reducer';\r\nimport {Observable} from 'rxjs';\r\nimport {Item} from '../../model/item';\r\nimport {getSelectItem} from '../../store/selectors/item.selectors';\r\n\r\n@Component({\r\n  selector: 'app-item-compra',\r\n  templateUrl: './item-compra.component.html',\r\n  styleUrls: ['./item-compra.component.scss']\r\n})\r\nexport class ItemCompraComponent implements OnInit {\r\n\r\n  item$: Observable<Item>;\r\n\r\n  constructor(private store: Store<ItemState>) { }\r\n\r\n  ngOnInit() {\r\n    this.item$ = this.store.pipe(select(getSelectItem));\r\n\r\n  }\r\n\r\n  dispatch(action: Action) {\r\n    this.store.dispatch(action);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3RhL2NvbnRhaW5lcnMvbGlzdGEtY29tcHJhL2xpc3RhLWNvbXByYS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Item} from '../../model/item';\r\nimport {Action, select, Store} from '@ngrx/store';\r\nimport {ItemState} from '../../store/reducers/item.reducer';\r\n\r\nimport {getAllItems} from '../../store/selectors/item.selectors';\r\nimport {selectItem} from '../../store/actions/item.actions';\r\n\r\n@Component({\r\n  selector: 'app-lista-compra',\r\n  templateUrl: './lista-compra.component.html',\r\n  styleUrls: ['./lista-compra.component.scss']\r\n})\r\nexport class ListaCompraComponent implements OnInit {\r\n\r\n  items$: Observable<Item[]>;\r\n\r\n\r\n  constructor(private store: Store<ItemState>) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.items$ = this.store.pipe(select(getAllItems));\r\n  }\r\n\r\n  dispatch(action: Action) {\r\n    this.store.dispatch(action);\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {ItemCompraComponent} from './containers/item-compra/item-compra.component';\r\nimport {ListaCompraComponent} from './containers/lista-compra/lista-compra.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', pathMatch: 'full', redirectTo: 'lista-compra'},\r\n  {path: 'item-compra', component: ItemCompraComponent},\r\n  {path: 'lista-compra', component: ListaCompraComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ListaRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {ListaRoutingModule} from './lista-routing.module';\r\nimport {ItemCompraComponent} from './containers/item-compra/item-compra.component';\r\nimport {ItemCompraDetailComponent} from './components/item-compra-detail/item-compra-detail.component';\r\nimport {CompraListComponent} from './components/compra-list/compra-list.component';\r\nimport {ListaCompraComponent} from './containers/lista-compra/lista-compra.component';\r\nimport {SharedModule} from '../core/shared/shared.module';\r\nimport {StoreModule} from '@ngrx/store';\r\nimport {itemReducer} from './store/reducers/feature.reducer';\r\nimport {EffectsModule} from '@ngrx/effects';\r\nimport {ItemsEffects} from './store/effects/items.effects';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [ListaCompraComponent, ItemCompraComponent, ItemCompraDetailComponent, CompraListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ListaRoutingModule,\r\n    SharedModule,\r\n    StoreModule.forFeature('item', itemReducer),\r\n    EffectsModule.forFeature([ItemsEffects])\r\n\r\n\r\n  ]\r\n})\r\nexport class ListaModule {\r\n}\r\n","import {createAction, props} from '@ngrx/store';\r\nimport {Item} from '../../model/item';\r\n\r\nexport const updateItemsList = createAction(\r\n  '[Items] Update Items List',\r\n  props < {items: Item[]}>()\r\n);\r\n\r\nexport const createItem = createAction(\r\n  '[Items] Create Item.',\r\n  props<{ item: Item }>()\r\n);\r\n\r\nexport const updateItem = createAction(\r\n  '[Items] Update Item.',\r\n  props<{ item: Item }>()\r\n);\r\n\r\nexport const deleteItem = createAction(\r\n  '[Items] Delete Item.',\r\n  props<{ id: string }>()\r\n);\r\n\r\nexport const selectItem = createAction(\r\n  '[Items] Select Item.',\r\n  props<{ item: Item }>()\r\n);\r\n\r\nexport const unselectItem = createAction(\r\n  '[Items] Unselect Item.',\r\n);\r\n\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {AngularFirestore} from '@angular/fire/firestore';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {createItem, deleteItem, updateItem, updateItemsList} from '../actions/item.actions';\r\nimport {Item} from '../../model/item';\r\nimport {catchError, concatMap, exhaustMap, map, switchMap} from 'rxjs/operators';\r\nimport {from, of} from 'rxjs';\r\nimport {navigateTo} from '../../../store/actions/app.actions';\r\nimport {showSnackBar} from '../../../core/store/actions/core.actions';\r\n\r\n@Injectable()\r\nexport class ItemsEffects {\r\n\r\n\r\n  updateItemsList$ = createEffect(() => this.fireStore.collection<Item>('items').valueChanges().pipe(\r\n    map(items => updateItemsList({items}))\r\n  ));\r\n\r\n\r\n  updateItem$ = createEffect(() => this.actions$.pipe(\r\n    ofType(updateItem),\r\n    exhaustMap((action) =>\r\n      from(this.fireStore.doc(`items/${action.item.id}`).set(action.item)).pipe(\r\n        concatMap(() => from([\r\n          navigateTo({commands: ['core', 'layout', 'lista']}),\r\n          showSnackBar({message: `Item ${action.item.nome} atualizado`, config: {}})\r\n        ])),\r\n        catchError(() => of(showSnackBar({\r\n          message: 'Ops, something goes wrong', config: {\r\n            duration: 5000\r\n          }\r\n        })))\r\n      )\r\n    ),\r\n  ));\r\n\r\n  createItem$ = createEffect(() => this.actions$.pipe(\r\n    ofType(createItem),\r\n    exhaustMap((action) =>\r\n      from(this.fireStore.doc(`items/${this.createId()}`).set({\r\n          id: this.id,\r\n          nome: action.item.nome,\r\n          preco: action.item.preco\r\n        }\r\n      )).pipe(\r\n        concatMap(() => from([\r\n          navigateTo({commands: ['core', 'layout', 'lista']}),\r\n          showSnackBar({message: `Item ${action.item.nome} criado`, config: {}})\r\n        ])),\r\n        catchError(() => of(showSnackBar({\r\n          message: 'Ops, something goes wrong.', config: {\r\n            duration: 5000\r\n          }\r\n        })))\r\n      )\r\n    ),\r\n  ));\r\n\r\n  deleteItem$ = createEffect(() => this.actions$.pipe(\r\n    ofType(deleteItem),\r\n    exhaustMap((action) =>\r\n      from(this.fireStore.doc(`items/${action.id}`).delete()).pipe(\r\n        concatMap(() => from([\r\n          navigateTo({commands: ['core', 'layout', 'lista']}),\r\n          showSnackBar({message: `Item excluído`, config: {}})\r\n        ])),\r\n        catchError(() => of(showSnackBar({\r\n          message: 'Ops, something goes wrong.', config: {\r\n            duration: 5000\r\n          }\r\n        })))\r\n      )\r\n    ),\r\n  ));\r\n\r\n\r\n  constructor(private fireStore: AngularFirestore, private actions$: Actions) {\r\n  }\r\n\r\n  id: string;\r\n\r\n  private createId() {\r\n    this.id = this.fireStore.createId();\r\n    return this.id;\r\n  }\r\n}\r\n","import {ItemState, reducerItems} from './item.reducer';\r\nimport {ActionReducerMap, createFeatureSelector} from '@ngrx/store';\r\n\r\nexport interface ItemsState {\r\n  items: ItemState;\r\n}\r\n\r\nexport const itemReducer: ActionReducerMap<ItemsState> = {\r\n  items: reducerItems\r\n};\r\n\r\nexport const getItemsState = createFeatureSelector<ItemsState>(\r\n  'item'\r\n);\r\n","import {Item} from '../../model/item';\r\nimport {Action, createReducer, on} from '@ngrx/store';\r\nimport {createItem, deleteItem, selectItem, unselectItem, updateItem, updateItemsList} from '../actions/item.actions';\r\nimport {createEntityAdapter, EntityState, Update} from '@ngrx/entity';\r\n\r\nexport const itemAdapter = createEntityAdapter<Item>(\r\n  {sortComparer: (a: Item, b: Item) => a.nome.localeCompare(b.nome)}\r\n);\r\n\r\nexport interface ItemState extends EntityState<Item> {\r\n  item?: Item;\r\n}\r\n\r\n// const pog = [\r\n//   {id: 1, nome: 'cerveja', preco: 5},\r\n//   {id: 2, nome: 'carne', preco: 20},\r\n//   {id: 3, nome: 'carvão', preco: 10},\r\n//   {id: 4, nome: 'gelo', preco: 10}\r\n// ];\r\n\r\n// const initialState = itemAdapter.addAll(pog, itemAdapter.getInitialState());\r\n\r\nconst initialState = itemAdapter.getInitialState();\r\n\r\nconst reducer = createReducer(\r\n  initialState,\r\n  on(updateItemsList, (state, {items}) => itemAdapter.addAll(items, state)),\r\n  on(selectItem, (state, {item}) => ({...state, item})),\r\n  on(unselectItem, updateItem, (state: ItemState) => {\r\n    const {item, ...rest} = state;\r\n    return rest;\r\n  }),\r\n  on(createItem, (state, {item}) => itemAdapter.addOne(item, state)),\r\n  // on(updateItem, (state, {item}) => itemAdapter.updateOne({id: item.id, changes: item}, state)),\r\n  on(deleteItem, (state, {id}) => itemAdapter.removeOne(id, state))\r\n);\r\n\r\nexport function reducerItems(state: ItemState, action: Action) {\r\n  return reducer(state, action);\r\n}\r\n","import {createSelector} from '@ngrx/store';\r\nimport {getItemsState} from '../reducers/feature.reducer';\r\nimport {itemAdapter} from '../reducers/item.reducer';\r\n\r\nexport const getItemState = createSelector(\r\n  getItemsState,\r\n  state => state.items\r\n);\r\n\r\nexport const getAllItems = createSelector(\r\n  getItemState,\r\n  state => itemAdapter.getSelectors().selectAll(state)\r\n);\r\n\r\nexport const getSelectItem = createSelector(\r\n  getItemState,\r\n  state => state.item\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}